{
  "name": "praxida-2.0",
  "version": "2.0.0",
  "description": "KI-gestÃ¼tzte Praxisverwaltung fÃ¼r Therapeuten mit SQLite, Whisper Speech-to-Text und OpenAI Integration",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js --watch server.js --watch db.js --ext js",
    "build": "npm rebuild",
    "setup": "node setup.js",
    "postinstall": "npm rebuild better-sqlite3 --build-from-source",
    "test": "echo \"Keine Tests definiert\" && exit 0",
    "init-db": "node -e \"require('./db.js'); console.log('âœ… Datenbank initialisiert');\"",
    "backup": "node backup.js create",
    "backup-db": "node backup.js create db",
    "restore": "node backup.js restore",
    "list-backups": "node backup.js list",
    "cleanup": "node backup.js cleanup",
    "vacuum": "node -e \"const {vacuum} = require('./db.js'); vacuum(); console.log('âœ… Datenbank optimiert');\"",
    "stats": "node -e \"const {getStatistics, getDataStats} = require('./db.js'); console.log('ðŸ“Š Statistiken:', JSON.stringify(getStatistics(), null, 2)); console.log('ðŸ’¾ Datenbank:', JSON.stringify(getDataStats(), null, 2));\"",
    "health": "curl -s http://localhost:3000/health | jq || echo 'jq nicht installiert, verwende: curl http://localhost:3000/health'",
    "lint": "echo \"Linting wÃ¼rde hier ausgefÃ¼hrt\"",
    "format": "echo \"Code-Formatierung wÃ¼rde hier ausgefÃ¼hrt\"",
    "check-deps": "npm outdated",
    "update-deps": "npm update",
    "reset": "rm -rf node_modules package-lock.json && npm install",
    "logs": "tail -f logs/*.log 2>/dev/null || echo 'Keine Log-Dateien gefunden'",
    "prod": "NODE_ENV=production node server.js",
    "docker-build": "echo \"Docker Build wÃ¼rde hier ausgefÃ¼hrt\"",
    "deploy": "echo \"Deployment wÃ¼rde hier ausgefÃ¼hrt\""
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "better-sqlite3": "^9.2.2",
    "body-parser": "^1.20.2",
    "dotenv": "^16.3.1",
    "express": "^4.21.2",
    "form-data": "^4.0.0",
    "mammoth": "^1.6.0",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^2.7.0",
    "pdf-parse": "^1.1.1"
  },
  "devDependencies": {
    "nodemon": "^3.0.2"
  },
  "optionalDependencies": {
    "sharp": "^0.33.0"
  },
  "keywords": [
    "therapie",
    "therapy",
    "ki",
    "ai",
    "artificial-intelligence",
    "praxisverwaltung",
    "practice-management",
    "dsgvo",
    "gdpr",
    "whisper",
    "speech-to-text",
    "openai",
    "gpt",
    "sqlite",
    "healthcare",
    "mental-health",
    "psychotherapy",
    "patient-management",
    "therapy-notes",
    "audio-transcription",
    "german",
    "deutsch"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/praxida-2.0.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/praxida-2.0/issues"
  },
  "homepage": "https://github.com/your-username/praxida-2.0#readme",
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com",
    "url": "https://your-website.com"
  },
  "contributors": [
    {
      "name": "Your Name",
      "email": "your.email@example.com"
    }
  ],
  "license": "MIT",
  "private": true,
  "config": {
    "port": 3000,
    "environment": "development"
  },
  "os": [
    "darwin",
    "linux",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "directories": {
    "lib": "./",
    "doc": "./docs",
    "test": "./tests"
  },
  "files": [
    "server.js",
    "db.js",
    "backup.js",
    "setup.js",
    "public/",
    "README.md",
    "LICENSE",
    ".env.example"
  ],
  "funding": {
    "type": "individual",
    "url": "https://github.com/sponsors/your-username"
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ],
  "nodemonConfig": {
    "watch": [
      "server.js",
      "db.js",
      "backup.js"
    ],
    "ext": "js",
    "ignore": [
      "node_modules/",
      "data/",
      "uploads/",
      "backups/",
      "logs/"
    ],
    "delay": 1000
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5"
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
      "ecmaVersion": 2021,
      "sourceType": "module"
    }
  }
}